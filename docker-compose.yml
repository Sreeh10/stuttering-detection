version: "3"

services:
  flask:
    build:
      context: ./flask
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    image: flask
    ports:
      - "8000:8000"
    volumes:
      - flask:/var/www
    environment:
      APP_ENV: "dev"
      APP_PORT: 5000
      APP_DEBUG: "True"
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: flaskpassword
      MONGODB_HOSTNAME: mongodb
    links:
      - mongodb
    networks:
      - backend
      - frontend

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: flaskuser
      MONGO_INITDB_ROOT_PASSWORD: flaskpassword
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend

  # webserver:
  #   build:
  #     context: nginx
  #     dockerfile: Dockerfile
  #   image: nginx
  #   container_name: webserver
  #   restart: unless-stopped
  #   environment:
  #     APP_ENV: "dev"
  #     APP_NAME: "webserver"
  #     APP_DEBUG: "True"
  #     SERVER_NAME: "webserver"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - nginxdata:/var/log/nginx
  #   depends_on:
  #     - flask
  #   networks:
  #     - frontend

networks:
  frontend:
    external: true
  backend:
    external: true

volumes:
  flask:
  mongodbdata:
  # nginxdata:
